<style lang="less">
  @bgColor:#e6e6e6;
  page{
    width: 100%;
    height: 100%;
  }
  .order-container{
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    padding: 10px 10px;
    background: @bgColor;
  }
  .order-box{
    width: 100%;
    background: #fff;
    border-radius: 5px;
    padding-top: 10px;
    .amount{
      font-size: 12px;
      color: #666;
      padding: 10px 15px;
    }
    .right{
      float: right;
    }
    .red{
      color:#FF3333;
      font-weight: 700;
    }
    .line{
      padding: 5px 0;
    }
    .card{
      background: #fff;
    }
  }
  .info-box{
    padding: 10px 15px;
    background: #fff;
    border-radius: 5px;
    margin-bottom: 20px;
    .info{
      width: 100%;
      display: flex;
      justify-content: space-between;
      .address-icon{
        width: 10%;
        display: flex;
        align-items: center;
        image{
          width: 50rpx;
          height: 50rpx;
        }
      }
      .address-text{
        line-height: 20px;
        width: 75%;
        font-size: 12px;
        .line-one{
          .name{
            font-size: 16px;
            margin-right: 10px;
          }
        } 
        .line-two{
          color: #333;
        }
      }
      .address-text2{
        display: flex;
        justify-content: flex-start;
        align-items: center;
      }
      .address-arrow{
        width: 10%;
        display: flex;
        align-items: center;
        justify-content: flex-end;
      }
    }
  }
</style>

<template>
  <view class="order-container">
    <!-- 物流概述:两种状态 -->
    <view class="info-box">
      <view wx:if="{{isInfo}}" class="info" @tap="goAddressAdd">
        <view class="address-icon">
          <image src="../static/images/order_address.png"></image>
        </view>
        <view class="address-text address-text2">
          新增收货地址
        </view>
        <view class="address-arrow">
          <van-icon name="arrow" />
        </view>
      </view>
      <view wx:else @tap="goAddressSelect">
        <view wx:if="{{!hasDefault}}" class="info">
          <view class="address-icon">
          <image src="../static/images/order_address.png"></image>
          </view>
          <view class="address-text address-text2">
            选择默认地址
          </view>
          <view class="address-arrow">
            <van-icon name="arrow" />
          </view>
        </view>
        <view wx:else class="info">
          <view class="address-icon">
          <image src="../static/images/order_address.png"></image>
          </view>
          <view class="address-text">
            <view class="line-one"><text class="name">{{addressSelected.username}}</text>{{addressSelected.phone}}</view>
            <view class="line-two">{{addressSelected.address}}</view>
          </view>
          <view class="address-arrow">
            <van-icon name="arrow" />
          </view>
        </view>
      </view>
    </view>
    <!-- 订单概述 -->
    <view class="order-box">
      <van-card
        num="1"
        price="{{ product.selling_price }}"
        title="{{ product.goods_title }}"
        thumb="{{ product.goods_logo }}"
        custom-class="card"
      >
        <view
          slot="tags"
          class="card__tags"
        >
        </view>
      </van-card>
      <view class="amount">
        <view class="line"><text class="left">商品金额：</text><text class="right">{{product.selling_price}}</text></view>
        <view class="line"><text class="left">运费：</text><text class="right">{{product.freight_price}}</text></view>
        <view class="line"><text class="left">实际金额：</text><text class="right">{{totalPrice}}</text></view>
        <view class="line"><text class="left">抵扣余额：</text><text class="right">{{balanceNum > sellingPrice ? product.selling_price : balance }}</text></view>
        <view class="line"><text class="left red">注：余额无法抵扣运费</text></view>
      </view>
    </view>
    <!-- 提交订单栏 -->
    <van-submit-bar
      price="{{ outOfPrice }}"
      label="实付金额："
      button-text="提交订单"
      bind:submit="onSubmit"
    >
    </van-submit-bar>
  </view>
</template>

<script>
import wepy from 'wepy'
import Address from '../util/address'
import { request } from '../util/request'
import {returnFloat} from '../util/handle'
import {goAddressAdd, goAddressSelect, goPayment} from '../router/routes.js'
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: '订单确认'
  }

  data = {
    product: {},
    addressList: [],
    addressSelected: {}, // 该地址为选中默认地址
    goods_id: '',
    address_id: '',
    balance: ''
  }

  computed = {
    isInfo () {
      if (JSON.stringify(this.addressSelected) !== '{}') {
        return false
      } else {
        return true
      }
    },
    hasDefault() { // 是否有默认地址
      let temp = this.addressList.find(item => {
        return item.is_default === 1
      })
      if (temp) {
        return true
      } else {
        return false
      }
    },
    totalPrice() { // 总金额
      let num = parseFloat(this.product.selling_price || 0) + parseFloat(this.product.freight_price || 0)
      num = returnFloat(num)
      return num
    },
    outOfPrice() { // 实付金额
      let temp1 = parseFloat(this.product.selling_price) - parseFloat(this.balance)
      let temp2 = temp1 > 0 ? temp1 : 0
      let temp3 = temp2 + parseFloat(this.product.freight_price)
      return temp3 * 100
    },
    balanceNum() {
      return parseFloat(this.balance)
    },
    sellingPrice() {
      return parseFloat(this.product.selling_price)
    }
  }

  methods = {
    // 路由
    goAddressAdd,
    goAddressSelect,
    onSubmit() {
      if (!this.address_id) {
        wx.showToast({
          title: '请选择填写收货地址',
          icon: 'none',
          duration: 2000
        })
        return
      }
      // 提交订单：商品ID、用户session3rd、用户选择地址
      request('POST', '/api/store/addOrder', {
        header: {
          session3rd: wx.getStorageSync('session3rd')
        },
        data: {
          goods_id: this.goods_id,
          address_id: this.address_id
        }
      }).then(res => {
        goPayment(res.data.order_no, this.outOfPrice / 100)
      })
    }
  }

  onShow() {
    // 显示选中地址
    Address.getAddressFromServer()
    .then(res => {
      if (res.length === 0) { return }
      let index = res.findIndex(item => {
        return item.is_default === 1
      })
      this.addressList = res
      this.addressSelected = res[index]
      this.address_id = this.addressSelected.id
      this.$apply()
    })
    // 请求个人中心接口，获取余额
    request('POST', '/api/Center/personal', {
      header: {
        session3rd: wx.getStorageSync('session3rd')
      }
    })
    .then((res) => {
      res = res.data
      this.balance = returnFloat(res.balance)
      this.$apply()
    })
  }
  onLoad(option) {
    this.goods_id = option.id
    request('GET', '/api/store/goodsinfo?id=' + option.id)
    .then(res => {
      this.product = res.data
      // 轮播图转数组
      let arr = res.data.goods_image.split('|')
      this.imgUrls = arr
      this.$apply()
    })
  }
}
</script>
